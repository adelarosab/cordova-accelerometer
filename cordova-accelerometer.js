// Generated by CoffeeScript 1.10.0
(function() {
  Polymer({
    is: "cordova-accelerometer",
    properties: {

      /* If true, automatically performs watch when device is ready. */
      auto: {
        reflectToAttribute: true,
        type: Boolean,
        value: false
      },

      /* If true, will watch over again, every period is finished. */
      loop: {
        reflectToAttribute: true,
        observer: "_observeLoop",
        type: Boolean,
        value: false
      },

      /* Time between updates of acceleration data in Milliseconds. */
      period: {
        reflectToAttribute: true,
        type: Number,
        value: 3000
      },

      /* Return if cordova deviceready event has been fired. */
      ready: {
        notify: true,
        observer: "_observeReady",
        readOnly: true,
        reflectToAttribute: true
      },

      /* Amount of acceleration on the x-axis. (in m/s^2) */
      x: {
        notify: true,
        readOnly: true
      },

      /* Amount of acceleration on the y-axis. (in m/s^2) */
      y: {
        notify: true,
        readOnly: true
      },

      /* Amount of acceleration on the z-axis. (in m/s^2) */
      z: {
        notify: true,
        readOnly: true
      }
    },
    _observeLoop: function() {
      if (this.loop) {
        return this.watch();
      } else {
        return this.clearWatch();
      }
    },
    _observeReady: function() {
      if (this.auto) {
        return this.watch();
      }
    },
    _setAcceleration: function(acceleration) {
      this._setX(acceleration.x);
      this._setY(acceleration.y);
      return this._setZ(acceleration.z);
    },

    /* Stop watching the Acceleration */
    clearWatch: function() {
      if (this.ready && (this.watchId != null)) {
        navigator.accelerometer.clearWatch(this.watchId);
        this.loop = false;
        return this.watchId = null;
      }
    },

    /* Get the current acceleration along the x, y, and z axes. If loop is set, it
     gets acceleration at regular interval.
     */
    watch: function() {
      var fn;
      if (this.ready) {
        fn = this.loop ? "watchAcceleration" : "getCurrentAcceleration";
        return this.watchId = navigator.accelerometer[fn](this._setAcceleration, this.fire.bind(this, "cordova-accelerometer"), {
          period: this.period
        });
      }
    }
  });

}).call(this);

//# sourceMappingURL=cordova-accelerometer.js.map
